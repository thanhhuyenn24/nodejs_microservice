version: "3"
services:
  nosql-db:
    image: mongo:8.0
    ports:
      - "27018:27017"
    container_name: nosql-db

  rabbitmq:
    image: rabbitmq:alpine
    container_name: rabbitmq
    ports:
      - '5672:5672'
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  products:
    build:
      dockerfile: Dockerfile
      context: ./backend/products
    container_name: products
    ports:
      - "8002:8002"
    restart: always
    depends_on:
      nosql-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./backend/products/.env.dev

  shopping:
    build:
      dockerfile: Dockerfile
      context: ./backend/shopping
    container_name: shopping
    ports:
      - "8003:8003"
    restart: always
    depends_on:
      nosql-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./backend/shopping/.env.dev

  customer:
    build:
      dockerfile: Dockerfile
      context: ./backend/customer
    container_name: customer
    ports:
      - "8001:8001"
    restart: always
    depends_on:
      nosql-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./backend/customer/.env.dev

  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./backend/proxy
    depends_on:
      - products
      - shopping
      - customer
    ports:
      - 8080:80

  frontend:
      build:
        dockerfile: Dockerfile
        context: ./frontend
      container_name: frontend
      ports:
        - "3000:3000" 
      restart: always
      depends_on:
        - "nginx-proxy" 
      volumes:
        - ./frontend:/app-frontend
        - /app-frontend/node_modules

  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports:
      - "16686:16686"   # Jaeger UI
      - "14250:14250"   # gRPC
    networks: [default]

  otel-collector:
    image: otel/opentelemetry-collector:0.98.0
    command: ["--config=/etc/otelcol/config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol/config.yaml:ro
    ports:
      - "4317:4317"     # OTLP gRPC (optional expose)
      - "4318:4318"     # OTLP HTTP
    depends_on: [jaeger]
    networks: [default]